# name of the workflow 
name: CI/CD for Dockerized Flask App

# when the workflow should be triggered (Events)
# 1. push event on main branch
# 2. pull request event on main branch
on:
    push: 
        branches: [main]
    pull_request:
        branches: [main]

# jobs that will be executed in the workflow            
jobs:
    # job name
    build-and-test: 
        # runs on ubuntu-latest
        runs-on: ubuntu-latest
        
        # steps that will be executed in the job
        steps: 
        # step-1: Checkout code uses the action to checkout the code from the repository
        - name: Checkout code 
          uses: actions/checkout@v3

        # step-2: Set up Python 3.9
        - name: Set up Python 3.9
          uses: actions/setup-python@v4
          with: 
            python-version: 3.9 

        # step-3: Install dependencies
        - name: Install dependencies
          run: | 
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        # step-4: Run tests
        - name: Run tests
          run: | 
           pytest          

    # job-2: Build and Publish Docker Image 
    build-and-publish: 
        # needs keyword is used to specify that this job depends on the build-and-test job
        needs: build-and-test
        # runs on ubuntu-latest
        runs-on: ubuntu-latest

        # steps that will be executed
        steps:
        # step-1: Checkout code
        - name: Checkout code 
          uses: actions/checkout@v3
        
        # step-2: Set up Docker Buildx
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        
        # step-3: Login to Docker Hub
        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with: 
            username: ${{secrets.DOCKER_USERNAME}}
            password: ${{secrets.DOCKER_PASSWORD}}

        # step-4: Build and push Docker image
        - name: Build and push Docker image 
          uses: docker/build-push-action@v4 
          with: 
            context: . 
            file: ./DockerFile
            push: true 
            tags: ${{secrets.DockER_USERNAME}}/flask-app:latest

        # step-5: Image Digest
        - name: Image Digest 
          run: echo ${{steps.build-and-publish.outputs.digest}}
        